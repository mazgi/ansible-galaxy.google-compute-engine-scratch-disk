version: "3.7"
services:
  provisioning:
    build:
      context: Dockerfile.d/provisioning
      args:
        UID: ${UID:-0}
        GID: ${GID:-0}
    working_dir: /workspace
    environment:
      - GOOGLE_CLOUD_KEYFILE_JSON=/workspace/credentials/google-cloud-keyfile.json
      - GOOGLE_APPLICATION_CREDENTIALS=/workspace/credentials/google-cloud-keyfile.json
      - CLOUDSDK_CORE_PROJECT
      - PROJECT_UNIQUE_ID
      - USER_GITHUB_ACCOUNT_NAME
    volumes:
      - provisioning-tmp:/tmp
      - provisioning-developer-home:/home/developer # To hold ~/{.config, .docker, ...},
      - provisioning-root-home:/root # for macOS
      - ${HOME}/.ssh/id_rsa:/home/developer/.ssh/id_rsa:ro
      - ${HOME}/.ssh/id_rsa.pub:/home/developer/.ssh/id_rsa.pub:ro
      - ${HOME}/.ssh/id_rsa:/root/.ssh/id_rsa:ro # for macOS
      - ${HOME}/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro # for macOS
      - .:/workspace
      - ..:/target-role
    user: "${UID:-0}:${GID:-0}"
    command:
      - bash
      - -c
      - |
        gcloud auth activate-service-account --key-file=/workspace/credentials/google-cloud-keyfile.json
        echo "mazgi:$$(cat ~/.ssh/id_rsa.pub)" > /tmp/ssh-keys.txt
        export INSTANCE_NAME="ansible-test-$${RANDOM}"
        gcloud compute instances create $${INSTANCE_NAME}\
         --zone=us-central1-a\
         --boot-disk-auto-delete\
         --machine-type=n1-standard-1\
         --local-ssd interface=nvme\
         --image-project=ubuntu-os-cloud\
         --image-family=ubuntu-1804-lts
        export INSTANCE_NAT_IP_ADDR=$$(gcloud compute instances describe $${INSTANCE_NAME} --zone=us-central1-a --format='get(networkInterfaces[0].accessConfigs[0].natIP)')
        gcloud compute instances add-metadata $${INSTANCE_NAME} --zone=us-central1-a --metadata-from-file ssh-keys=/tmp/ssh-keys.txt
        for i in $$(seq 5)
        do
          ansible --inventory $$INSTANCE_NAT_IP_ADDR, --user $$USER_GITHUB_ACCOUNT_NAME --module-name ping $$INSTANCE_NAT_IP_ADDR && break
          sleep 15
        done
        ansible-playbook --inventory $$INSTANCE_NAT_IP_ADDR, --user $$USER_GITHUB_ACCOUNT_NAME test.yml
        gcloud compute instances delete $${INSTANCE_NAME} --zone=us-central1-a --delete-disks=all --quiet

volumes:
  provisioning-tmp:
    driver: local
  provisioning-developer-home:
    driver: local
  provisioning-root-home:
    driver: local
